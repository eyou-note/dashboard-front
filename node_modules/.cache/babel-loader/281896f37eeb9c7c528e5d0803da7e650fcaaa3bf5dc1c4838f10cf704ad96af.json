{"ast":null,"code":"var _jsxFileName = \"/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [\"푸시 발송 요청\", \"std-notification\", \"ccs-notification(not implemented)\"];\n\n// Example detailed logs for each step\nconst logs = [\"푸시 발송 요청: This is the log for the push notification request.\", \"std-notification: This is the log for the standard notification.\", \"ccs-notification: This step is not implemented yet.\"];\nexport default function TransactionStepper(props) {\n  _s();\n  const [expandedStep, setExpandedStep] = useState(null);\n  const handleToggleDetails = stepIndex => {\n    setExpandedStep(expandedStep === stepIndex ? null : stepIndex);\n  };\n  const isStepFailed = step => {\n    return step === props.step;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: 1,\n      children: steps.map((label, index) => {\n        const labelProps = {};\n        if (isStepFailed(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"Somethins Wrong..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this);\n          labelProps.error = true;\n        }\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              ...labelProps,\n              children: [label, /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleToggleDetails(index),\n                sx: {\n                  marginLeft: 2\n                },\n                children: \"\\\">>\\\"\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: expandedStep === index,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                padding: 2,\n                backgroundColor: \"#f5f5f5\",\n                borderRadius: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: logs[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionStepper, \"8UmGsbV54SeFXkKoQTx1Zd5cgtw=\");\n_c = TransactionStepper;\nvar _c;\n$RefreshReg$(_c, \"TransactionStepper\");","map":{"version":3,"names":["React","useState","Box","Stepper","Step","StepLabel","Typography","Button","Collapse","jsxDEV","_jsxDEV","steps","logs","TransactionStepper","props","_s","expandedStep","setExpandedStep","handleToggleDetails","stepIndex","isStepFailed","step","sx","width","children","activeStep","map","label","index","labelProps","optional","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","error","Fragment","size","onClick","marginLeft","in","timeout","unmountOnExit","padding","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Collapse from \"@mui/material/Collapse\";\n\nconst steps = [\"푸시 발송 요청\", \"std-notification\", \"ccs-notification(not implemented)\"];\n\n// Example detailed logs for each step\nconst logs = [\n    \"푸시 발송 요청: This is the log for the push notification request.\",\n    \"std-notification: This is the log for the standard notification.\",\n    \"ccs-notification: This step is not implemented yet.\",\n];\n\nexport default function TransactionStepper(props) {\n    const [expandedStep, setExpandedStep] = useState(null);\n\n    const handleToggleDetails = stepIndex => {\n        setExpandedStep(expandedStep === stepIndex ? null : stepIndex);\n    };\n\n    const isStepFailed = step => {\n        return step === props.step;\n    };\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Stepper activeStep={1}>\n                {steps.map((label, index) => {\n                    const labelProps = {};\n                    if (isStepFailed(index)) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\" color=\"error\">\n                                Somethins Wrong..\n                            </Typography>\n                        );\n\n                        labelProps.error = true;\n                    }\n\n                    return (\n                        <React.Fragment key={label}>\n                            <Step>\n                                <StepLabel {...labelProps}>\n                                    {label}\n                                    <Button size=\"small\" onClick={() => handleToggleDetails(index)} sx={{ marginLeft: 2 }}>\n                                        \">>\"\"\n                                    </Button>\n                                </StepLabel>\n                            </Step>\n                            {/* Collapsible log section */}\n                            <Collapse in={expandedStep === index} timeout=\"auto\" unmountOnExit>\n                                <Box sx={{ padding: 2, backgroundColor: \"#f5f5f5\", borderRadius: 1 }}>\n                                    <Typography variant=\"body2\">{logs[index]}</Typography>\n                                </Box>\n                            </Collapse>\n                        </React.Fragment>\n                    );\n                })}\n            </Stepper>\n        </Box>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAG,CAAC,UAAU,EAAE,kBAAkB,EAAE,mCAAmC,CAAC;;AAEnF;AACA,MAAMC,IAAI,GAAG,CACT,8DAA8D,EAC9D,kEAAkE,EAClE,qDAAqD,CACxD;AAED,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMiB,mBAAmB,GAAGC,SAAS,IAAI;IACrCF,eAAe,CAACD,YAAY,KAAKG,SAAS,GAAG,IAAI,GAAGA,SAAS,CAAC;EAClE,CAAC;EAED,MAAMC,YAAY,GAAGC,IAAI,IAAI;IACzB,OAAOA,IAAI,KAAKP,KAAK,CAACO,IAAI;EAC9B,CAAC;EAED,oBACIX,OAAA,CAACR,GAAG;IAACoB,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eACvBd,OAAA,CAACP,OAAO;MAACsB,UAAU,EAAE,CAAE;MAAAD,QAAA,EAClBb,KAAK,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACzB,MAAMC,UAAU,GAAG,CAAC,CAAC;QACrB,IAAIT,YAAY,CAACQ,KAAK,CAAC,EAAE;UACrBC,UAAU,CAACC,QAAQ,gBACfpB,OAAA,CAACJ,UAAU;YAACyB,OAAO,EAAC,SAAS;YAACC,KAAK,EAAC,OAAO;YAAAR,QAAA,EAAC;UAE5C;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACf;UAEDP,UAAU,CAACQ,KAAK,GAAG,IAAI;QAC3B;QAEA,oBACI3B,OAAA,CAACV,KAAK,CAACsC,QAAQ;UAAAd,QAAA,gBACXd,OAAA,CAACN,IAAI;YAAAoB,QAAA,eACDd,OAAA,CAACL,SAAS;cAAA,GAAKwB,UAAU;cAAAL,QAAA,GACpBG,KAAK,eACNjB,OAAA,CAACH,MAAM;gBAACgC,IAAI,EAAC,OAAO;gBAACC,OAAO,EAAEA,CAAA,KAAMtB,mBAAmB,CAACU,KAAK,CAAE;gBAACN,EAAE,EAAE;kBAAEmB,UAAU,EAAE;gBAAE,CAAE;gBAAAjB,QAAA,EAAC;cAEvF;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEP1B,OAAA,CAACF,QAAQ;YAACkC,EAAE,EAAE1B,YAAY,KAAKY,KAAM;YAACe,OAAO,EAAC,MAAM;YAACC,aAAa;YAAApB,QAAA,eAC9Dd,OAAA,CAACR,GAAG;cAACoB,EAAE,EAAE;gBAAEuB,OAAO,EAAE,CAAC;gBAAEC,eAAe,EAAE,SAAS;gBAAEC,YAAY,EAAE;cAAE,CAAE;cAAAvB,QAAA,eACjEd,OAAA,CAACJ,UAAU;gBAACyB,OAAO,EAAC,OAAO;gBAAAP,QAAA,EAAEZ,IAAI,CAACgB,KAAK;cAAC;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAdMT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeV,CAAC;MAEzB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAACrB,EAAA,CAhDuBF,kBAAkB;AAAAmC,EAAA,GAAlBnC,kBAAkB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}