{"ast":null,"code":"var _jsxFileName = \"/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js\";\nimport * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { ColorlibConnector, ColorlibStepIcon } from \"./style/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STEPS = [\"request push\", \"std-notification\", \"ccs-notification\"];\nconst data = {\n  status: \"SUCCESS\",\n  activeStep: 1,\n  data: [{\n    phase: 0,\n    transactionLog: \"PHASE 0 Transaction Log..\"\n  }, {\n    phase: 1,\n    transactionLog: \"PHASE 0 Transaction Log..\"\n  }]\n};\nfunction getNormalIcon() {\n  return ColorlibStepIcon;\n}\nfunction getStepIcons(data) {\n  return STEPS.map((label, i) => {\n    const labelProps = {};\n    if (data.status === \"FAILURE\" && i <= data.activeStep) {\n      labelProps.error = true;\n    }\n    return /*#__PURE__*/_jsxDEV(Step, {\n      children: /*#__PURE__*/_jsxDEV(StepLabel, {\n        ...labelProps,\n        StepIconComponent: getNormalIcon(),\n        children: [label, \"2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n//응답값이 넘어온다.\n//응답을 분석해서 아이콘을 생성한다.\nexport default function TransactionStepper() {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      width: \"100%\"\n    },\n    spacing: 4,\n    children: /*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: 1,\n      connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 65\n      }, this),\n      children: getStepIcons(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_c = TransactionStepper;\nvar _c;\n$RefreshReg$(_c, \"TransactionStepper\");","map":{"version":3,"names":["React","Stack","Stepper","Step","StepLabel","ColorlibConnector","ColorlibStepIcon","jsxDEV","_jsxDEV","STEPS","data","status","activeStep","phase","transactionLog","getNormalIcon","getStepIcons","map","label","i","labelProps","error","children","StepIconComponent","fileName","_jsxFileName","lineNumber","columnNumber","TransactionStepper","sx","width","spacing","alternativeLabel","connector","_c","$RefreshReg$"],"sources":["/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js"],"sourcesContent":["import * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { ColorlibConnector, ColorlibStepIcon } from \"./style/Icon\";\n\nconst STEPS = [\"request push\", \"std-notification\", \"ccs-notification\"];\nconst data = {\n    status: \"SUCCESS\",\n    activeStep: 1,\n    data: [\n        {\n            phase: 0,\n            transactionLog: \"PHASE 0 Transaction Log..\",\n        },\n        {\n            phase: 1,\n            transactionLog: \"PHASE 0 Transaction Log..\",\n        },\n    ],\n};\n\nfunction getNormalIcon() {\n    return ColorlibStepIcon;\n}\n\nfunction getStepIcons(data) {\n    return STEPS.map((label, i) => {\n        const labelProps = {};\n        if (data.status === \"FAILURE\" && i <= data.activeStep) {\n            labelProps.error = true;\n        }\n\n        return (\n            <Step key={label}>\n                <StepLabel {...labelProps} StepIconComponent={getNormalIcon()}>\n                    {label}2\n                </StepLabel>\n            </Step>\n        );\n    });\n}\n\n//응답값이 넘어온다.\n//응답을 분석해서 아이콘을 생성한다.\nexport default function TransactionStepper() {\n    return (\n        <Stack sx={{ width: \"100%\" }} spacing={4}>\n            <Stepper alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\n                {getStepIcons(data)}\n            </Stepper>\n        </Stack>\n    );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,GAAG,CAAC,cAAc,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;AACtE,MAAMC,IAAI,GAAG;EACTC,MAAM,EAAE,SAAS;EACjBC,UAAU,EAAE,CAAC;EACbF,IAAI,EAAE,CACF;IACIG,KAAK,EAAE,CAAC;IACRC,cAAc,EAAE;EACpB,CAAC,EACD;IACID,KAAK,EAAE,CAAC;IACRC,cAAc,EAAE;EACpB,CAAC;AAET,CAAC;AAED,SAASC,aAAaA,CAAA,EAAG;EACrB,OAAOT,gBAAgB;AAC3B;AAEA,SAASU,YAAYA,CAACN,IAAI,EAAE;EACxB,OAAOD,KAAK,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;IAC3B,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,IAAIV,IAAI,CAACC,MAAM,KAAK,SAAS,IAAIQ,CAAC,IAAIT,IAAI,CAACE,UAAU,EAAE;MACnDQ,UAAU,CAACC,KAAK,GAAG,IAAI;IAC3B;IAEA,oBACIb,OAAA,CAACL,IAAI;MAAAmB,QAAA,eACDd,OAAA,CAACJ,SAAS;QAAA,GAAKgB,UAAU;QAAEG,iBAAiB,EAAER,aAAa,CAAC,CAAE;QAAAO,QAAA,GACzDJ,KAAK,EAAC,GACX;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GAHLT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CAAC;EAEf,CAAC,CAAC;AACN;;AAEA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EACzC,oBACIpB,OAAA,CAACP,KAAK;IAAC4B,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAACC,OAAO,EAAE,CAAE;IAAAT,QAAA,eACrCd,OAAA,CAACN,OAAO;MAAC8B,gBAAgB;MAACpB,UAAU,EAAE,CAAE;MAACqB,SAAS,eAAEzB,OAAA,CAACH,iBAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAL,QAAA,EACrEN,YAAY,CAACN,IAAI;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEhB;AAACO,EAAA,GARuBN,kBAAkB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}