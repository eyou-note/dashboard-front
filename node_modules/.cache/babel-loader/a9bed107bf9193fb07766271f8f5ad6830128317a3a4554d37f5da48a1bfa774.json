{"ast":null,"code":"var _jsxFileName = \"/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepButton from \"@mui/material/StepButton\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\nexport default function TransactionStepper() {\n  _s();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const isStepFailed = step => {\n    return step === 1;\n  };\n  const totalSteps = () => {\n    return steps.length;\n  };\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ?\n    // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        completed: completed[index],\n        children: /*#__PURE__*/_jsxDEV(StepButton, {\n          color: \"inherit\",\n          onClick: handleStep(index),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1\n          },\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: \"1 1 auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1,\n            py: 1\n          },\n          children: [\"Step \", activeStep + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionStepper, \"ScfQtMjocTEEPsQJA4wuJiaPwNA=\");\n_c = TransactionStepper;\nvar _c;\n$RefreshReg$(_c, \"TransactionStepper\");","map":{"version":3,"names":["React","Box","Stepper","Step","StepButton","Button","Typography","jsxDEV","_jsxDEV","steps","TransactionStepper","_s","activeStep","setActiveStep","useState","completed","setCompleted","isStepFailed","step","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","sx","width","children","nonLinear","map","label","index","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","mt","mb","display","flexDirection","pt","flex","py","_c","$RefreshReg$"],"sources":["/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepButton from \"@mui/material/StepButton\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nconst steps = [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n\nexport default function TransactionStepper() {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [completed, setCompleted] = React.useState({});\n\n    const isStepFailed = step => {\n        return step === 1;\n    };\n\n    const totalSteps = () => {\n        return steps.length;\n    };\n\n    const completedSteps = () => {\n        return Object.keys(completed).length;\n    };\n\n    const isLastStep = () => {\n        return activeStep === totalSteps() - 1;\n    };\n\n    const allStepsCompleted = () => {\n        return completedSteps() === totalSteps();\n    };\n\n    const handleNext = () => {\n        const newActiveStep =\n            isLastStep() && !allStepsCompleted()\n                ? // It's the last step, but not all steps have been completed,\n                  // find the first step that has been completed\n                  steps.findIndex((step, i) => !(i in completed))\n                : activeStep + 1;\n        setActiveStep(newActiveStep);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleStep = step => () => {\n        setActiveStep(step);\n    };\n\n    const handleComplete = () => {\n        const newCompleted = completed;\n        newCompleted[activeStep] = true;\n        setCompleted(newCompleted);\n        handleNext();\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n        setCompleted({});\n    };\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Stepper nonLinear activeStep={activeStep}>\n                {steps.map((label, index) => (\n                    <Step key={label} completed={completed[index]}>\n                        <StepButton color=\"inherit\" onClick={handleStep(index)}>\n                            {label}\n                        </StepButton>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {allStepsCompleted() ? (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>All steps completed - you&apos;re finished</Typography>\n                        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            <Button onClick={handleReset}>Reset</Button>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1, py: 1 }}>Step {activeStep + 1}</Typography>\n                    </React.Fragment>\n                )}\n            </div>\n        </Box>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}