{"ast":null,"code":"var _jsxFileName = \"/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js\";\nimport * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { ColorlibConnector, ColorlibStepIcon } from \"./style/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STEPS = [\"request push\", \"std-notification\", \"ccs-notification\"];\nfunction getNormalIcon(data) {\n  // if (data.status === \"SUCCESS\") return;\n  // console.log(\"getNormalIcon:\", data);\n  return ColorlibStepIcon; // data 기준으로 아이콘 만들고 싶은데..\n}\nfunction getStepIcons(data) {\n  return STEPS.map((label, i) => {\n    const labelProps = {};\n    if (!data.steps[i]) {\n      labelProps.error = true;\n    } else if (data.steps[i].status === \"FAILURE\") {\n      labelProps.error = true;\n    }\n    return /*#__PURE__*/_jsxDEV(Step, {\n      children: /*#__PURE__*/_jsxDEV(StepLabel, {\n        ...labelProps,\n        StepIconComponent: ColorlibStepIcon,\n        StepIconProps: {\n          step: data.steps[i]\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n//응답값이 넘어온다.\n//응답을 분석해서 아이콘을 생성한다.\nexport default function TransactionStepper(props) {\n  const {\n    data\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      width: \"100%\"\n    },\n    spacing: 4,\n    children: /*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: 1,\n      connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 65\n      }, this),\n      children: getStepIcons(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = TransactionStepper;\nvar _c;\n$RefreshReg$(_c, \"TransactionStepper\");","map":{"version":3,"names":["React","Stack","Stepper","Step","StepLabel","ColorlibConnector","ColorlibStepIcon","jsxDEV","_jsxDEV","STEPS","getNormalIcon","data","getStepIcons","map","label","i","labelProps","steps","error","status","children","StepIconComponent","StepIconProps","step","fileName","_jsxFileName","lineNumber","columnNumber","TransactionStepper","props","sx","width","spacing","alternativeLabel","activeStep","connector","_c","$RefreshReg$"],"sources":["/Users/eoz/study/std-notification-dashboard-frontend/src/Components/transaction/TransactionStepper.js"],"sourcesContent":["import * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { ColorlibConnector, ColorlibStepIcon } from \"./style/Icon\";\n\nconst STEPS = [\"request push\", \"std-notification\", \"ccs-notification\"];\n\nfunction getNormalIcon(data) {\n    // if (data.status === \"SUCCESS\") return;\n    // console.log(\"getNormalIcon:\", data);\n    return ColorlibStepIcon; // data 기준으로 아이콘 만들고 싶은데..\n}\n\nfunction getStepIcons(data) {\n    return STEPS.map((label, i) => {\n        const labelProps = {};\n        if (!data.steps[i]) {\n            labelProps.error = true;\n        } else if (data.steps[i].status === \"FAILURE\") {\n            labelProps.error = true;\n        }\n\n        return (\n            <Step key={label}>\n                <StepLabel {...labelProps} StepIconComponent={ColorlibStepIcon} StepIconProps={{ step: data.steps[i] }}>\n                    {label}\n                </StepLabel>\n            </Step>\n        );\n    });\n}\n\n//응답값이 넘어온다.\n//응답을 분석해서 아이콘을 생성한다.\nexport default function TransactionStepper(props) {\n    const { data } = props;\n    return (\n        <Stack sx={{ width: \"100%\" }} spacing={4}>\n            <Stepper alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\n                {getStepIcons(data)}\n            </Stepper>\n        </Stack>\n    );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,GAAG,CAAC,cAAc,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;AAEtE,SAASC,aAAaA,CAACC,IAAI,EAAE;EACzB;EACA;EACA,OAAOL,gBAAgB,CAAC,CAAC;AAC7B;AAEA,SAASM,YAAYA,CAACD,IAAI,EAAE;EACxB,OAAOF,KAAK,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;IAC3B,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,IAAI,CAACL,IAAI,CAACM,KAAK,CAACF,CAAC,CAAC,EAAE;MAChBC,UAAU,CAACE,KAAK,GAAG,IAAI;IAC3B,CAAC,MAAM,IAAIP,IAAI,CAACM,KAAK,CAACF,CAAC,CAAC,CAACI,MAAM,KAAK,SAAS,EAAE;MAC3CH,UAAU,CAACE,KAAK,GAAG,IAAI;IAC3B;IAEA,oBACIV,OAAA,CAACL,IAAI;MAAAiB,QAAA,eACDZ,OAAA,CAACJ,SAAS;QAAA,GAAKY,UAAU;QAAEK,iBAAiB,EAAEf,gBAAiB;QAACgB,aAAa,EAAE;UAAEC,IAAI,EAAEZ,IAAI,CAACM,KAAK,CAACF,CAAC;QAAE,CAAE;QAAAK,QAAA,EAClGN;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GAHLb,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CAAC;EAEf,CAAC,CAAC;AACN;;AAEA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC9C,MAAM;IAAElB;EAAK,CAAC,GAAGkB,KAAK;EACtB,oBACIrB,OAAA,CAACP,KAAK;IAAC6B,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAACC,OAAO,EAAE,CAAE;IAAAZ,QAAA,eACrCZ,OAAA,CAACN,OAAO;MAAC+B,gBAAgB;MAACC,UAAU,EAAE,CAAE;MAACC,SAAS,eAAE3B,OAAA,CAACH,iBAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAP,QAAA,EACrER,YAAY,CAACD,IAAI;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEhB;AAACS,EAAA,GATuBR,kBAAkB;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}